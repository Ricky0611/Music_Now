# This is a basic workflow to automatically build and release at each commit with tag to git repo.

name: Android Build

# Controls when the action will run. 
on:
  # Triggers the workflow on push events for the master branch
  push:
    branches: [ master ]
    tags:
      - 'v*'

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:

  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out the repository under $GITHUB_WORKSPACE, so the job can access it
      - name: Checkout
        uses: actions/checkout@v2
      # Setup JDK
      - name: Setup JDK
        uses: actions/setup-java@v2
        with:
          java-version: '8'
          distribution: 'adopt'
      # Grant execute permission for gradlew
      - name: Grant Permission
        run: chmod +x gradlew
      # Assemble and Test Project
      - name: Build Project
        run: ./gradlew build

  apk:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup JDK
        uses: actions/setup-java@v2
        with:
          java-version: '8'
          distribution: 'adopt'
      - name: Build APK
        run: bash ./gradlew assembleDebug --stacktrace
      - name: Upload APK
        uses: actions/upload-artifact@v2
        with:
          name: apk
          path: app/build/outputs/apk/debug/app-debug.apk

  release:
    needs: apk
    if: startsWith(github.ref, 'refs/tags/v')
    runs-on: ubuntu-latest
    steps:
      - name: Download APK from build
        uses: actions/download-artifact@v2
        with:
          name: apk
          path: ./
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false
      - name: Upload Release APK
        id: upload_release_asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./app-debug.apk
          asset_name: MusicNow.apk
          asset_content_type: application/zip